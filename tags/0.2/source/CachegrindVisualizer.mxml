<?xml version="1.0" encoding="utf-8"?>
<mx:WindowedApplication xmlns:mx="http://www.adobe.com/2006/mxml" paddingBottom="5" paddingLeft="5" paddingTop="5" paddingRight="5" creationComplete="handleCreationComplete()">
	
	<mx:Style source="C:\flex\framework\style.css"/>
	
	<mx:ApplicationControlBar width="100%">
		<mx:Button label="@Resource('open')" click="browse()"/>
		<mx:Button id="b_refresh" label="@Resource('refresh')" enabled="{tabNavigator.selectedChild != null}" click="Tab(tabNavigator.selectedChild).refresh()"/>
	</mx:ApplicationControlBar>
	<mx:TabNavigator id="tabNavigator" width="100%" height="100%" change="handleTabChange()">

	</mx:TabNavigator>
	
	<mx:Script><![CDATA[
			
	import flash.system.System;
	
	import mx.resources.ResourceBundle;
	import mx.events.IndexChangedEvent
	
	import develar.filesystem.FileWrapper;
	import develar.formatters.Formatter;
	import develar.net.PersistenceSession;		
	
	import develar.cachegrindVisualizer.ui.Tab;
	
	private var fileWrapper:FileWrapper;
	private var fileFilters:Array = [new FileFilter(ResourceBundle.getResourceBundle('CachegrindVisualizer').getString('cachegrindFiles'), 'cachegrind.out.*'), new FileFilter(ResourceBundle.getResourceBundle('CachegrindVisualizer').getString('allFiles'), '*')];
	
	private var _persistenceSession:PersistenceSession = new PersistenceSession();
	public function get persistenceSession():PersistenceSession
	{
		return _persistenceSession;
	}
	
	private function handleCreationComplete():void
	{
		window.maximize();
	}
	
	private function browse():void
	{
		fileWrapper = new FileWrapper();
		fileWrapper.file.addEventListener(Event.SELECT, handleSelectFile);
		if ('profilerDirPath' in persistenceSession.data)
		{
			fileWrapper.file.nativePath = persistenceSession.data.profilerDirPath;
		}
		
		fileWrapper.file.browse(fileFilters);
	}
	
	private function handleSelectFile(event:Event):void
	{	
		persistenceSession.data.profilerDirPath = fileWrapper.file.nativePath;
		persistenceSession.flush();
		
		for each (var existTab:Tab in tabNavigator.getChildren())
		{
			if (existTab.fileWrapper.file.name == fileWrapper.file.name)
			{
				tabNavigator.selectedChild = existTab;
				if (existTab.modificationTime != fileWrapper.file.modificationDate.time)
				{
					existTab.refresh();
				}
				return;
			}
		}
		
		var tab:Tab = new Tab();		
		tab.fileWrapper = fileWrapper;
		fileWrapper = null;		
		tabNavigator.addChild(tab);
		tabNavigator.selectedChild = tab;
		
		// при добавлении первой вкладки связывание не срабатывает
		b_refresh.enabled = true;
	}
	
	private function handleTabChange():void
	{
		// в момент создания вкладки мы еще не произвели анализ и имя анализируемого программы нам неизвестно
		if (Tab(tabNavigator.selectedChild).initialized)
		{
			title = 'CachegrindVisualizer — ' + tabNavigator.selectedChild.label + ' (' + Tab(tabNavigator.selectedChild).tree.firstVisibleItem.fileName + ')';
		}
	}
	
	]]></mx:Script>	
	
</mx:WindowedApplication>
