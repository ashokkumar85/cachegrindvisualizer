<?xml version="1.0" encoding="utf-8"?>
<mx:VBox xmlns:mx="http://www.adobe.com/2006/mxml" xmlns:develar="http://neo-net.ru/2007/develar" label="{resourceManager.getString('CallGraph', 'callGraph')}" creationComplete="handleCreationComplete()" width="100%" height="100%">
	
	<mx:Metadata>
		[ResourceBundle('CallGraph')]
	</mx:Metadata>
	
	<mx:Panel id="panel" title="{resourceManager.getString('CallGraph', 'configuration')}" width="100%">
		<mx:Form width="100%">
			<mx:FormItem label="{resourceManager.getString('CallGraph', 'title')}" width="100%">
				<mx:HBox width="100%">
					<develar:TextInput id="title" width="100%" change="handleChangeWithDelay(event)"/>
					<mx:ComboBox id="titleLocation" change="handleChange(event)">
						<mx:Array>
							<mx:Object data="{Configuration.TITLE_LOCATION_TOP}" label="{resourceManager.getString('CallGraph', 'top')}"/>
							<mx:Object data="{Configuration.TITLE_LOCATION_BOTTOM}" label="{resourceManager.getString('CallGraph', 'bottom')}"/>
						</mx:Array>
					</mx:ComboBox>					
				</mx:HBox>				
			</mx:FormItem>
			<mx:FormItem label="{resourceManager.getString('CallGraph', 'grouping')}">
				<mx:ComboBox id="grouping" change="handleChange(event)">
					<mx:Array>						
						<mx:Object data="{Grouper.NODES_AND_CALLS}" label="{resourceManager.getString('CallGraph', 'groupingNodesAndCalls')}"/>
						<mx:Object data="{Grouper.NODES}" label="{resourceManager.getString('CallGraph', 'groupingNodes')}"/>
						<mx:Object data="{Grouper.CALLS}" label="{resourceManager.getString('CallGraph', 'groupingCalls')}"/>
						<mx:Object data="{Grouper.NO}" label="{resourceManager.getString('CallGraph', 'groupingNo')}"/>
					</mx:Array>
				</mx:ComboBox>
			</mx:FormItem>
			<mx:FormItem label="{resourceManager.getString('CallGraph', 'minNodeCost')}">
				<develar:NumericStepper id="minNodeCost" maximum="99" maxChars="4" stepSize="0.01" change="handleChangeWithDelay(event)"/>
			</mx:FormItem>
			<mx:FormItem label="{resourceManager.getString('CallGraph', 'labelType')}">
				<mx:ComboBox id="labelType" change="handleChange(event)">
					<mx:Array>
						<mx:Object data="{Label.TYPE_PERCENTAGE_AND_TIME}" label="{resourceManager.getString('CallGraph', 'labelTypePercentageAndTime')}"/>
						<mx:Object data="{Label.TYPE_TIME_AND_PERCENTAGE}" label="{resourceManager.getString('CallGraph', 'labelTypeTimeAndPercentage')}"/>
						<mx:Object data="{Label.TYPE_PERCENTAGE}" label="{resourceManager.getString('CallGraph', 'labelTypePercentage')}"/>
						<mx:Object data="{Label.TYPE_TIME}" label="{resourceManager.getString('CallGraph', 'labelTypeTime')}"/>
						<mx:Object data="{Label.TYPE_NO}" label="{resourceManager.getString('CallGraph', 'labelTypeNo')}"/>
					</mx:Array>
				</mx:ComboBox>
			</mx:FormItem>
			<mx:FormItem label="{resourceManager.getString('CallGraph', 'rankDirection')}">
				<mx:ComboBox id="rankDirection" change="handleChange(event)">
					<mx:Array>
						<mx:Object data="{Configuration.RANK_DIRECTION_TB}" label="{resourceManager.getString('CallGraph', 'rankDirectionTB')}"/>
						<mx:Object data="{Configuration.RANK_DIRECTION_BT}" label="{resourceManager.getString('CallGraph', 'rankDirectionBT')}"/>
						<mx:Object data="{Configuration.RANK_DIRECTION_LR}" label="{resourceManager.getString('CallGraph', 'rankDirectionLR')}"/>
						<mx:Object data="{Configuration.RANK_DIRECTION_RL}" label="{resourceManager.getString('CallGraph', 'rankDirectionRL')}"/>
					</mx:Array>
				</mx:ComboBox>
			</mx:FormItem>
			<mx:FormItem>
				<mx:CheckBox id="blackAndWhite" label="{resourceManager.getString('CallGraph', 'blackAndWhite')}" change="handleChange(event)"/>
			</mx:FormItem>
			<mx:FormItem>
				<mx:CheckBox id="hideLibraryFunctions" label="{resourceManager.getString('CallGraph', 'hideLibraryFunctions')}" change="handleChange(event)"/>
			</mx:FormItem>			
		</mx:Form>
		
		<mx:ControlBar width="100%">
			<mx:Button label="{resourceManager.getString('CallGraph', 'loadConfiguration')}" click="configurationManager.load()"/>
			<mx:Button label="{resourceManager.getString('CallGraph', 'saveConfiguration')}" click="configurationManager.save()"/>
			<mx:Spacer/>
			<mx:Button label="{resourceManager.getString('CallGraph', 'restoreDefaults')}" enabled="{PersistenceSession.instance.callGraphConfigurationName != null}" click="configurationManager.restoreDefaults()"/>
		</mx:ControlBar>
	</mx:Panel>
	<mx:Spacer/>
	<mx:ProgressBar id="progressBar" width="100%" labelPlacement="center"/>
	
	<mx:Script><![CDATA[		
	
	import flash.filesystem.File;
	
	import develar.controls.NumericStepper;
	
	import cachegrindVisualizer.net.PersistenceSession;
	import cachegrindVisualizer.callGraph.builders.Builder;
	import cachegrindVisualizer.callGraph.builders.Grouper;
	import cachegrindVisualizer.callGraph.builders.Label;
	import cachegrindVisualizer.callGraph.managers.ConfigurationManager;
	import cachegrindVisualizer.controls.tree.TreeItem;
	import cachegrindVisualizer.callGraph.builders.Configuration;
	
	private var configurationManager:ConfigurationManager;
	private var file:File;
	
	private var _builder:Builder;
	public function get builder():Builder
	{
		return _builder;
	}
	public function set builder(value:Builder):void
	{
		_builder = value;
		progressBar.source = _builder;
	}
	
	private function handleCreationComplete():void
	{
		resourceManager.addEventListener(Event.CHANGE, handleLocaleChange); 
	}
	
	private function handleLocaleChange(event:Event):void
	{
		labelType.text = labelType.selectedItem.label;
		rankDirection.text = rankDirection.selectedItem.label;
		titleLocation.text = titleLocation.selectedItem.label;
		
		build();
	}
	
	public function build():void
	{
		if (configurationManager == null)
		{
			configurationManager = new ConfigurationManager(this);
			var filePath:String = Tab(parentDocument).file.nativePath;
			if (Tab(parentDocument).file.extension == CachegrindVisualizer(parentApplication).FILE_TYPE)
			{
				// это вам не PHP, length только положительный
				filePath = filePath.substr(0, filePath.length - 3);
			}
			file = new File(filePath + '.dot');
		}
		
		builder.cancel();
		builder.build(TreeItem(Tab(parentDocument).tree.selectedItem), file, configurationManager.configuration);
	}
	
	private function handleChange(event:Event):void
	{
		if (event.target is ComboBox)
		{
			configurationManager.configuration[event.target.id] = event.target.selectedItem.data;
		}
		else if (event.target is NumericStepper)
		{
			configurationManager.configuration[event.target.id] = event.target.value;
		}
		else if (event.target is CheckBox)
		{
			configurationManager.configuration[event.target.id] = event.target.selected;
		}
		else
		{
			configurationManager.configuration[event.target.id] = event.target.text;
		}
		
		build();
	}
	
	private function handleChangeWithDelay(event:Event):void
	{		
		var timer:Timer = new Timer(2000, 1);
		var timerHandler:Function;
		if (event.target is NumericStepper)
		{
			var value:Number = event.target.value;
			timerHandler = function (timerEvent:TimerEvent):void { if (value == event.target.value) { handleChange(event); }};
		}
		else
		{
			var text:String = event.target.text;
			timerHandler = function (timerEvent:TimerEvent):void { if (text == event.target.text) { handleChange(event); }};
		}
		
		timer.addEventListener(TimerEvent.TIMER, timerHandler);
		timer.start();
	}
	
	]]></mx:Script>
	
</mx:VBox>