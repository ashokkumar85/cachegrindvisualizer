<?xml version="1.0" encoding="utf-8"?>
<!--
	@author Vladimir Krivosheev
	@version $Id$
-->
<mx:WindowedApplication xmlns:mx="http://www.adobe.com/2006/mxml" xmlns:develar="http://neo-net.ru/2007/develar" paddingBottom="5" paddingLeft="5" paddingTop="5" paddingRight="5" creationComplete="handleCreationComplete()">
	
	<mx:Metadata>
		[ResourceBundle('Shared')]
		[ResourceBundle('CachegrindVisualizer')]
	</mx:Metadata>
	
	<mx:Style source="../../../framework/style.css"/>
	
	<mx:ApplicationControlBar width="100%">
		<mx:Button label="{resourceManager.getString('Shared', 'open')}" click="browse()"/>
		<mx:Button id="b_refresh" label="{resourceManager.getString('Shared', 'refresh')}" enabled="{tabNavigator.selectedChild != null}" click="Tab(tabNavigator.selectedChild).refresh()"/>
		<mx:Spacer width="100%"/>
		<develar:LocaleComboBox dataProvider="{locales}"/>
	</mx:ApplicationControlBar>
	<develar:TabNavigator id="tabNavigator" width="100%" height="100%" change="handleTabChange()"/>
	
	<mx:Script><![CDATA[
	
	[Bindable]
	private var locales:Array = new Array({id: 'en_US', label: 'English'}, {id: 'ru', label: 'Russian'});
		
	import flash.filesystem.File;
	import flash.system.System;
	import flash.events.NativeDragEvent;
	import flash.desktop.ClipboardFormats;
	import flash.desktop.DragManager;
	import flash.desktop.DragActions;
	
	import mx.events.IndexChangedEvent
	
	import develar.filesystem.FileWrapper;
	import develar.formatters.Formatter;
	
	import develar.cachegrindVisualizer.ui.Tab;
	import develar.cachegrindVisualizer.net.PersistenceSession;
	
	private var fileWrapper:FileWrapper;
	private var fileFilters:Array;

	private function handleCreationComplete():void
	{
		nativeWindow.maximize();
		nativeWindow.visible = true;
		
		addEventListener(NativeDragEvent.NATIVE_DRAG_ENTER, handleNativeDragEnter);
		addEventListener(NativeDragEvent.NATIVE_DRAG_DROP, handleNativeDragDrop);
		
		fileFilters = new Array(new FileFilter(resourceManager.getString('CachegrindVisualizer', 'cachegrindFiles'), 'cachegrind.out.*'), new FileFilter(resourceManager.getString('CachegrindVisualizer', 'allFiles'), '*'));
	}
	
	private function handleNativeDragEnter(event:NativeDragEvent):void
	{
		if (event.clipboard.hasFormat(ClipboardFormats.FILE_LIST_FORMAT))
		{
			DragManager.acceptDragDrop(this);
		}
	}
	
	private function handleNativeDragDrop(event:NativeDragEvent):void
	{
		for each (var file:File in event.clipboard.dataForFormat(ClipboardFormats.FILE_LIST_FORMAT))
		{
			fileWrapper = new FileWrapper(file);
			openFile();
		}
	}
	
	private function browse():void
	{
		fileWrapper = new FileWrapper();
		fileWrapper.file.addEventListener(FileListEvent.SELECT_MULTIPLE, handleSelectMultiple);
		if (PersistenceSession.instance.profilerOutputDirectory != null)
		{
			fileWrapper.file.nativePath = PersistenceSession.instance.profilerOutputDirectory;
		}
		
		fileWrapper.file.browseForOpenMultiple('', fileFilters);
	}
	
	private function handleSelectMultiple(event:FileListEvent):void
	{
		for each (var file:File in event.files)
		{
			fileWrapper = new FileWrapper(file);
			openFile();
		}
	}
	
	private function openFile():void
	{	
		PersistenceSession.instance.profilerOutputDirectory = fileWrapper.file.nativePath;
		PersistenceSession.instance.flush();
		
		for each (var existTab:Tab in tabNavigator.getChildren())
		{
			if (existTab.fileWrapper.file.name == fileWrapper.file.name)
			{
				tabNavigator.selectedChild = existTab;
				if (existTab.modificationTime != fileWrapper.file.modificationDate.time)
				{
					existTab.refresh();
				}
				return;
			}
		}
		
		var tab:Tab = new Tab();		
		tab.fileWrapper = fileWrapper;
		fileWrapper = null;		
		tabNavigator.addChild(tab);
		tabNavigator.selectedChild = tab;
		
		// при добавлении первой вкладки связывание не срабатывает
		b_refresh.enabled = true;
	}
	
	private function handleTabChange():void
	{
		// в момент создания вкладки мы еще не произвели анализ и имя анализируемого программы нам неизвестно
		if (Tab(tabNavigator.selectedChild).initialized)
		{
			title = 'CachegrindVisualizer — ' + tabNavigator.selectedChild.label + ' (' + Tab(tabNavigator.selectedChild).tree.firstVisibleItem.fileName + ')';
		}
	}
	
	]]></mx:Script>	
	
</mx:WindowedApplication>